using System;
using Interfaces;
using Biblioteca;
using System.Collections.Generic;
using System.IO;


namespace ClasesInterfaces{
    public class RepositorioClienteArchTexto : IRepositorioCliente
    {
        public void AgregarCliente(Cliente cliente)
        {
            using (StreamWriter sw = new StreamWriter("Cliente.txt")){
                sw.WriteLine($"{cliente.documento}|{cliente.nombre}|{cliente.apellido}|{cliente.direccion}|{cliente.fecha_nacimiento}|{cliente.fecha_compra}|");
            }
        }

        public void EliminarCliente(int Dni)
        {
            StreamWriter sw = File.CreateText("temporal.txt");
            StreamReader sr = new StreamReader("Clientes.txt");
            string? linea;
            string[] campos = new string[5];
            bool ok=false;
            while(!sr.EndOfStream){
                linea = sr.ReadLine();
                while(linea != null){
                    campos = linea.Split('|');
                }
                for(int i=0;i < campos.Length;i++){
                    if(Int32.Parse(campos[0]) == Dni){
                        ok=true;; 
                    }
                    else{
                        sw.WriteLine(linea);
                    }
                }
            }
            if(ok == false){
                Console.WriteLine("El dni no esta en el archivo");
            }
            sw.Close();
            sr.Close();
            File.Delete("Clientes.txt");
            File.Move("temporal.txt","Clientes.txt");
        }

        public Cliente GetCliente(int DNI)
        {
            Cliente c = new Cliente();
            using(StreamReader sr = new StreamReader("Cliente.txt")){
                try{
                    bool cc = true;
                    while(!sr.EndOfStream && cc){
                        string? cadena = sr.ReadLine();
                        string[] vElementos = new string[6];
                        while(cadena != null){
                            vElementos= cadena.Split("|");
                        }
                        if(Int32.Parse(vElementos[0]) == DNI){
                            c.documento=Int32.Parse(vElementos[0]);
                            c.nombre=vElementos[1];
                            c.apellido=vElementos[2];
                            c.direccion=vElementos[3];
                            c.fecha_nacimiento=DateTime.Parse(vElementos[4]);
                            c.fecha_compra=DateTime.Parse(vElementos[5]);
                            cc = true;
                        }
                    }
                    if(cc){
                        return c;
                    }
                    else{
                        return null;
                    }
                }  
                catch(Exception e)
                {
                    Console.WriteLine(e.Message);
                }

                return c;
            }
        }

        public List<Cliente>GetClientes(){
            List<Cliente>lista = new List<Cliente>();
            StreamReader sr = new StreamReader("Clientes.txt");
            Cliente cliente = new Cliente();
            string? linea;
            string[] campos = new string[5];
            while(!sr.EndOfStream){
                linea = sr.ReadLine();
                while(linea != null){
                    campos = linea.Split('|');
                }  
                cliente.documento=Int32.Parse(campos[0]);
                cliente.nombre=campos[1];
                cliente.apellido=campos[2];
                cliente.direccion=campos[3];
                cliente.fecha_nacimiento=DateTime.Parse(campos[4]);
                cliente.fecha_compra=DateTime.Parse(campos[5]);
                lista.Add(cliente);

            }
            sr.Close();
            return lista;
        }

        public void ModificarCliente(Cliente cliente)
        {
            using (StreamReader sr = new StreamReader("Cliente.txt")){
                try{
                    while(!sr.EndOfStream){
                        string? cadena = sr.ReadLine();
                        string[] elementos = new string [6];
                        while(cadena != null){
                            elementos = cadena.Split("|");
                        } 
                        if(cliente.documento == Int32.Parse(elementos[0])){
                            using(StreamWriter sw = new StreamWriter("Cliente.txt")){
                                sw.WriteLine($"{cliente.documento}|{cliente.nombre}|{cliente.apellido}|{cliente.direccion}|{cliente.fecha_nacimiento}|{cliente.fecha_compra}|");
                            }
                        }
                    }
                }
                catch(Exception e){
                    Console.WriteLine(e.Message);
                }
        }
    }
}
